{"version":3,"sources":["../src/entropy.js"],"names":[],"mappings":"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","file":"entropy.js","sourcesContent":["/*\n  From https://github.com/vibornoff/entropy-collector.js\n */\n\nfunction EntropyCollector(global) {\n  const min = Math.min;\n  const max = Math.max;\n  const abs = Math.abs;\n  const floor = Math.floor;\n  const log = Math.log;\n  const pow = Math.pow;\n  const atan2 = Math.atan2;\n  const LN2 = Math.LN2;\n  const PI = Math.PI;\n\n  const _dateNow = global.Date.now;\n  const _perf = global.performance;\n  let _perfTiming;\n  let _perfNow;\n\n  if (_perf) {\n    _perfTiming = _perf.timing;\n    _perfNow = _perf.now;\n  }\n\n  // Timestamping\n  let now;\n  let _timeStart;\n  let _timePrecision;\n\n  _timeStart = 0;\n\n  if (_perfNow) {\n    now = () => (1000 * _perf.now() | 0);\n    _timePrecision = 1;\n  } else {\n    _timeStart = (_perfTiming) ? _perfTiming.navigationStart : _dateNow();\n    now = () => (1000 * (_dateNow() - _timeStart) | 0);\n    _timePrecision = 1000;\n  }\n\n  // EventTarget to bind to\n  let _eventTarget = global.document || global;\n\n  // Buffer for events\n  const _bufferSize = 1024;\n  let _buffer = new Int32Array(2 * _bufferSize);\n\n  // Collected events\n\n  // MAYBE TODO _entropy_mic_events, _entropy_cam_events\n  let _timeEvents = _buffer.subarray(0, _bufferSize);\n  let _coordEvents = _buffer.subarray(_bufferSize);\n  let _eventCounter = 0;\n  let _estimatedEntropy = 0;\n\n  // Collectors\n  let _lastT = 0;\n  let _lastX = 0;\n  let _lastY = 0;\n\n  function _mouseCollector(e) {\n    const i = _eventCounter % _bufferSize;\n    const t = now();\n    const x = e.screenX;\n    const y = e.screenY;\n\n    if (_eventCounter) {\n      _timeEvents[i] = max(t - _lastT, 0);\n      _coordEvents[i] = ((x - _lastX << 16) | (y - _lastY & 0xffff));\n    }\n\n    _lastT = t;\n    _lastX = x;\n    _lastY = y;\n    _eventCounter++;\n  }\n\n  function _touchCollector(e) {\n    for (let i = 0; i < e.touches.length; i++) {\n      _mouseCollector(e.touches[i]);\n    }\n  }\n\n  function _keyboardCollector() {\n    const i = _eventCounter % _bufferSize;\n    const t = now();\n\n    if (_eventCounter) {\n      _timeEvents[i] = max(t - _lastT, 0);\n    }\n\n    _lastT = t;\n    _eventCounter++;\n  }\n\n  function start() {\n    _eventTarget.addEventListener('mousemove', _mouseCollector);\n    _eventTarget.addEventListener('mousedown', _mouseCollector);\n    _eventTarget.addEventListener('mouseup', _mouseCollector);\n    _eventTarget.addEventListener('touchmove', _touchCollector);\n    _eventTarget.addEventListener('touchstart', _touchCollector);\n    _eventTarget.addEventListener('touchend', _touchCollector);\n    _eventTarget.addEventListener('keydown', _keyboardCollector);\n    _eventTarget.addEventListener('keyup', _keyboardCollector);\n  }\n\n  function stop() {\n    _eventTarget.removeEventListener('mousemove', _mouseCollector);\n    _eventTarget.removeEventListener('mousedown', _mouseCollector);\n    _eventTarget.removeEventListener('mouseup', _mouseCollector);\n    _eventTarget.removeEventListener('touchmove', _touchCollector);\n    _eventTarget.removeEventListener('touchstart', _touchCollector);\n    _eventTarget.removeEventListener('touchend', _touchCollector);\n    _eventTarget.removeEventListener('keydown', _keyboardCollector);\n    _eventTarget.removeEventListener('keyup', _keyboardCollector);\n\n    // reset values\n    _estimatedEntropy = 0;\n    _buffer = new Int32Array(2 * _bufferSize);\n    _timeEvents = _buffer.subarray(0, _bufferSize);\n    _coordEvents = _buffer.subarray(_bufferSize);\n    _eventCounter = 0;\n    _lastT = 0;\n    _lastX = 0;\n    _lastY = 0;\n  }\n\n  // Hard math ☺\n  function _shannon0(A, W) {\n    let n = 0;\n\n    for (const k in A) {\n      if (typeof A[k] !== 'undefined') {\n        n += A[k];\n      }\n    }\n\n    if (!n) {\n      return 0;\n    }\n\n    let h = 0;\n\n    for (const k in A) {\n      if (typeof A[k] !== 'undefined') {\n        const p = A[k] / n;\n        const w = W(k); // eslint-disable-line\n        if (!w) continue;\n        h -= p * log(p / w);\n      }\n    }\n    return h;\n  }\n\n  function _shannon1(A, B, W) {\n    let n = 0;\n    for (const k in A) {\n      if (typeof A[k] !== 'undefined') {\n        n += A[k];\n      }\n    }\n\n    if (!n) return 0;\n\n    let h = 0;\n\n    for (const k in A) {\n      if (!B[k]) continue;\n      h += (A[k] / n) * _shannon0(B[k], W);\n    }\n\n    return h;\n  }\n\n  function _timeMedian(X) {\n    const Y = X.sort((a, b) => a - b);\n    return Y[floor(Y.length / 2)];\n  }\n\n  function _timeBar(t, m) {\n    const d = abs(t - m) / _timePrecision;\n    const b = floor(log(1 + d) / LN2);\n    return (t < 0) ? -b : b;\n  }\n\n  function _timeInterval(b, m) {\n    const s = (b < 0) ? -1 : 1;\n    let t0 = m + s * (pow(2, abs(b)) - 1);\n    let t1 = m + s * (pow(2, abs(b) + 1) - 1);\n    if (t0 < 0) t0 = 0;\n    if (t1 < 0) t1 = 0;\n    return abs(t1 - t0) * _timePrecision;\n  }\n\n  function _coordBar(c) {\n    const x = c >> 16;\n    const y = (c << 16) >> 16;\n    const s = PI * (x * x + y * y) / 16;\n    let a = atan2(y, x);\n    if (a === PI) a = -PI;\n    return ((floor(log(1 + s) / LN2) << 4) | (8 * (a + PI) / PI));\n  }\n\n  function _coordInterval(b) {\n    const s0 = pow(2, (b >>> 4)) - 1;\n    const s1 = pow(2, (b >>> 4) + 1) - 1;\n    return s1 - s0;\n  }\n\n  function estimate() {\n    // Filter out repeated events\n    // though it causes some underestimation, it's ok\n\n    const T = [_timeEvents[0]];\n    for (let i = 1; i < _bufferSize; i++) {\n      if (_timeEvents[i] === _timeEvents[i - 1]) continue;\n      T.push(_timeEvents[i]);\n    }\n\n    const C = [_coordEvents[0]];\n    for (let i = 1; i < _bufferSize; i++) {\n      if (_coordEvents[i] === _coordEvents[i - 1]) continue;\n      C.push(_coordEvents[i]);\n    }\n\n    // Calculate time values median\n    const Tm = _timeMedian(T);\n\n    // Interval width helper functions\n    function _tB(t) {\n      return _timeBar(t, Tm);\n    }\n    function _tI(b) {\n      return _timeInterval(parseInt(b), Tm) / _timePrecision; // eslint-disable-line\n    }\n    function _cI(b) {\n      return _coordInterval(parseInt(b)); // eslint-disable-line\n    }\n    // Build histogram with log-scale bars\n\n    let TH0 = {};\n    const Tl = T.length;\n\n    for (let i = 0; i < Tl; i++) {\n      const b = _tB(T[i]);\n      TH0[b] |= 0;\n      TH0[b]++;\n    }\n\n    let CH0 = {};\n    const Cl = C.length;\n\n    for (let i = 0; i < Cl; i++) {\n      const b = _coordBar(C[i]);\n      CH0[b] |= 0;\n      CH0[b]++;\n    }\n\n    // First-order estimation\n    let th0 = _shannon0(TH0, _tI) * Tl;\n    let ch0 = _shannon0(CH0, _cI) * Cl;\n\n    // We need to go deeper …\n    for (let u = 1; u < Tl - 1; u++) {\n      // Build conditional histograms with log-scale bars\n      const TH1 = {};\n      let dep = 0;\n\n      for (let i = u; i < Tl; i++) {\n        const seq = T.slice(i - u, i).map(_tB).join(' ');\n        const b = _tB(T[i]);\n\n        TH1[seq] = TH1[seq] || {};\n        TH1[seq][b] |= 0;\n        TH1[seq][b]++;\n\n        if (TH1[seq][b] > 1) dep++;\n      }\n\n      if (!dep) break;\n\n      // Higher-order estimation\n      const th1 = _shannon1(TH0, TH1, _tI) * (Tl - u);\n      if ((th0 - th1) / th0 < 0.01) {\n        th0 = th1;\n        break;\n      }\n\n      // Flatten H1\n      TH0 = {};\n      for (const a in TH1) {\n        if (!TH1[a]) continue;\n        for (const b in TH1[a]) {\n          if (!TH1[a][b]) continue;\n          TH0[`${a} ${b}`] = TH1[a][b];\n        }\n      }\n      th0 = th1;\n    }\n\n    for (let u = 1; u < Cl - 1; u++) {\n      // Build conditional histograms with log-scale bars\n      const CH1 = {};\n      let dep = 0;\n      for (let i = u; i < Cl; i++) {\n        const seq = C.slice(i - u, i).map(_coordBar).join(' ');\n        const b = _coordBar(C[i]);\n        CH1[seq] = CH1[seq] || {};\n        CH1[seq][b] |= 0;\n        CH1[seq][b]++;\n\n        if (CH1[seq][b] > 1) dep++;\n      }\n\n      if (!dep) break;\n\n      // Higher-order estimation\n      const ch1 = _shannon1(CH0, CH1, _coordInterval) * (Cl - u);\n      if ((ch0 - ch1) / ch0 < 0.01) {\n        ch0 = ch1;\n        break;\n      }\n      // Flatten H1\n      CH0 = {};\n      for (const a in CH1) {\n        if (!CH1[a]) continue;\n        for (const b in CH1[a]) {\n          if (!CH1[a][b]) continue;\n          CH0[`${a} ${b}`] = CH1[a][b];\n        }\n      }\n      ch0 = ch1;\n    }\n    _estimatedEntropy = floor(th0 / LN2) + floor(ch0 / LN2);\n    return _estimatedEntropy;\n  }\n\n  return {\n    get eventTarget() {\n      return _eventTarget;\n    },\n    set eventTarget(e) {\n      stop();\n      _eventTarget = e;\n    },\n\n    get eventsCaptured() {\n      return min(_eventCounter, _bufferSize);\n    },\n\n    get estimatedEntropy() {\n      return estimate();\n    },\n\n    get buffer() {\n      return _buffer;\n    },\n\n    start,\n    stop,\n  };\n}\n\nexport default EntropyCollector;\n"]}